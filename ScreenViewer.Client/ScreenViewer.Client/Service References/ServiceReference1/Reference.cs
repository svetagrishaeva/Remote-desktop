//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.276
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScreenViewer.Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IScreen", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IScreen {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreen/GetScreenShot", ReplyAction="http://tempuri.org/IScreen/GetScreenShotResponse")]
        byte[] GetScreenShot();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScreenChannel : ScreenViewer.Client.ServiceReference1.IScreen, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScreenClient : System.ServiceModel.ClientBase<ScreenViewer.Client.ServiceReference1.IScreen>, ScreenViewer.Client.ServiceReference1.IScreen {
        
        public ScreenClient() {
        }
        
        public ScreenClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScreenClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScreenClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScreenClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] GetScreenShot() {
            return base.Channel.GetScreenShot();
        }
    }
}
